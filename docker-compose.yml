version: "3.8"

services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    environment:
      - API_BASE_URL=http://backend:80/api
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "80:80"
      - "443:443"
    environment:
      - ASPNETCORE_ENVIRONMENT=Production
      - DB_CONNECTION=Host=postgres;Port=5555;Database=taskmanagement;Username=postgres;Password=postgres
      - JWT_SECRET=2d70f1e410fc665d84b6cbb0cc4126b9b201dfdfdeac25fe82de88351c270447
      - JWT_ISSUER=task-management-system
      - JWT_AUDIENCE=task-management-system
    depends_on:
      postgres:
        condition: service_healthy

  postgres:
    image: postgres:16-alpine
    ports:
      - "5555:5432"
    environment:
      - POSTGRES_DB=taskmanagement
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 5s
      timeout: 5s
      retries: 5

volumes:
  postgres_data:
